version: '3.8'

services:
  server:
    image: nginx:stable-alpine
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 8000:80
    depends_on:
      - php

  php:
    image: app:1.0.0
    build:
      context: ./dockerfiles
      dockerfile: php.Dockerfile
    volumes:
      - ./src/:/var/www/html/:delegated
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:13.4-alpine3.14
    restart: always
    env_file:
      - ./envs/postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql
    ports:
      - 55432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -P postgres']
      interval: 2s
      timeout: 5s

  redis:
    image: redis:6.2.6-alpine3.14 
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 5s

  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.Dockerfile
    volumes:
      - ./src/:/var/www/html/

  artisan:
    image: app:1.0.0
    build:
      context: ./dockerfiles
      dockerfile: php.Dockerfile
    entrypoint: ["php", "/var/www/html/artisan"]
    volumes:
      - ./src:/var/www/html

  yarn:
    image: node:14.19.0-alpine3.14
    working_dir: /var/www/html
    entrypoint: ["yarn"]
    volumes:
      - ./src:/var/www/html

volumes:
  postgres_data:
  redis_data: